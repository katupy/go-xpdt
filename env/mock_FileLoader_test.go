// Code generated by mockery v2.32.0. DO NOT EDIT.

package env

import mock "github.com/stretchr/testify/mock"

// MockFileLoader is an autogenerated mock type for the FileLoader type
type MockFileLoader struct {
	mock.Mock
}

type MockFileLoader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFileLoader) EXPECT() *MockFileLoader_Expecter {
	return &MockFileLoader_Expecter{mock: &_m.Mock}
}

// Load provides a mock function with given fields: file
func (_m *MockFileLoader) Load(file *File) error {
	ret := _m.Called(file)

	var r0 error
	if rf, ok := ret.Get(0).(func(*File) error); ok {
		r0 = rf(file)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFileLoader_Load_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Load'
type MockFileLoader_Load_Call struct {
	*mock.Call
}

// Load is a helper method to define mock.On call
//   - file *File
func (_e *MockFileLoader_Expecter) Load(file interface{}) *MockFileLoader_Load_Call {
	return &MockFileLoader_Load_Call{Call: _e.mock.On("Load", file)}
}

func (_c *MockFileLoader_Load_Call) Run(run func(file *File)) *MockFileLoader_Load_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*File))
	})
	return _c
}

func (_c *MockFileLoader_Load_Call) Return(_a0 error) *MockFileLoader_Load_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileLoader_Load_Call) RunAndReturn(run func(*File) error) *MockFileLoader_Load_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFileLoader creates a new instance of MockFileLoader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFileLoader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFileLoader {
	mock := &MockFileLoader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
